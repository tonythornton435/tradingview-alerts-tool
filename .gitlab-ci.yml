variables:
  FORCE_COLOR: '3'

image: alleywayapps/atat-ci-image:1.0.0

stages:
  - build
  - test
  - deploy


build_image:
  stage: build
  services:
    - docker:dind
  image: docker
  tags:
    - docker
  rules:
    - if: $CI_COMMIT_REF_NAME == "develop"
      changes:
        - Dockerfile
  script:
    - docker info
    - docker build -t alleywayapps/atat-ci-image .
    - docker image tag alleywayapps/atat-ci-image alleywayapps/atat-ci-image:latest
    - docker image tag alleywayapps/atat-ci-image alleywayapps/atat-ci-image:v${CI_PIPELINE_IID}
    - echo "${DOCKER_AUTH_TOKEN}" | docker login --username alleywayapps --password-stdin
    - docker push --all-tags alleywayapps/atat-ci-image

build:
  stage: build
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  #  tags:
  #    - macmini
  cache:
    paths:
      - node_modules/
      - dist/
  artifacts:
    expire_in: 1 days
    when: on_success
    paths:
      - node_modules/
      - dist/
  script:
    - node -v
    - npm install npm -g
    - npm ci
    - npm run build

test:
  stage: test
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
  dependencies:
    - build
  cache:
    paths:
      - node_modules/
      - dist/
      - coverage/
  artifacts:
    paths:
      - coverage/
      - screenshot*
    when: always
    expire_in: 1 week
    reports:
      junit:
        - junit.xml
      cobertura: coverage/cobertura-coverage.xml
  script:
    - echo "${ENV_FILE_CONTENTS}" >> .env
    - chmod 755 ./dist/cli.js
    - npm run test:ci

pages:
  stage: deploy
  dependencies:
    - test
  script:
      - mkdir .public
      - cp -r coverage/* .public
      - mv .public public
  artifacts:
     paths:
      - public
  only:
      - master

deploy_npm:
  stage: deploy
  dependencies:
    - test
  cache:
    paths:
      - node_modules/
  script:
    - echo "//registry.npmjs.org/:_authToken=${NPM_PUBLISH_KEY}" >> .npmrc
    - echo "email=${NPM_PUBLISH_EMAIL}" >> .npmrc
    - echo always-auth=true >> .npmrc
    #- cat .npmrc
    # we only release master from the development machine manually
    #- "[[ ${CI_COMMIT_BRANCH} != 'master' ]] &&
    - npx release-it prerelease --config .release-it.ci.json --ci --no-git --verbose --preReleaseId='ci.${CI_PIPELINE_IID}'
  only:
    refs:
      - develop
